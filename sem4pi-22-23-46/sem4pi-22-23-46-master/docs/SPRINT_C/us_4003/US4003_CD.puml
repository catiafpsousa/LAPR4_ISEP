@startuml
'https://plantuml.com/class-diagram

package "presentation" #LightSteelBlue {
    class AcceptOrRejectMeetingRequestUI <<UI>>{
    - theController : AcceptOrRejectMeetingRequestController
    }
}

package "domain" #LightSteelBlue {

    class Meeting <<aggregate root>> <<entity>>{
       - meetingToken : MeetingToken
        - duration : MeetingDuration
        - date : Calendar
        - participantList : List<MeetingParticipant>
        - id : Long
        +updateInvitationStatus(participant, status)

        }

         class MeetingParticipant <<entity>>{
         - inviteStatus : InviteStatus
         - id : Long
         - systemUser : SystemUser
         + updateInvitationStatus(status)
         }

         enum InviteStatus <<valueObject>> {

         }

         class MeetingDuration <<valueObject>> {

         }
          class MeetingToken <<valueObject>> {

          }
}

package "repositories" #LightSteelBlue {

    interface MeetingRepository <<repository>>{
    save(Meeting)
    }

}

package "application" #LightSteelBlue {
 class AcceptOrRejectMeetingRequestController <<controller>>{
    - meetingRepo : MeetingRepository

    +AcceptOrRejectMeetingRequest()
    +findPendingMeetings()
    }
}

package "persistence" #LightSteelBlue {
    class JpaMeetingRepository {
    }

    class InMemoryMeetingRepository {
    }

}

AcceptOrRejectMeetingRequestUI .-> AcceptOrRejectMeetingRequestController
AcceptOrRejectMeetingRequestController .-> MeetingRepository
AcceptOrRejectMeetingRequestController .-> Meeting
Meeting -> MeetingParticipant
Meeting -> MeetingDuration
Meeting -> MeetingToken
MeetingParticipant -> InviteStatus
MeetingRepository .-> Meeting
JpaMeetingRepository .-> MeetingRepository : implements
InMemoryMeetingRepository .-> MeetingRepository: implements



@enduml